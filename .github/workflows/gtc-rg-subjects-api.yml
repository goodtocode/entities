on:
  push:
    branches-ignore:
    - main
    paths:
    - .github/workflows/gtc-rg-subjects-api.yml
    - src/**
  pull_request:
    branches:
    - main    
    paths:
    - .github/workflows/gtc-rg-subjects-api.yml
    - src/**

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:  
  build_src:
    name: 'Build and Test .NET'
    runs-on: ubuntu-latest
    environment: development    
    env:
      API_NAME: 'api-subjects-dev-001'
    strategy:
      matrix:
        dotnet-version: [ '6.0.x', '7.0.x' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        - name: Upload dotnet test results
          uses: actions/upload-artifact@v3
          with:
            name: dotnet-results-${{ matrix.dotnet-version }}
            path: TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}

  deploy_app_service:
    name: 'Deploy to App Service'
    runs-on: ubuntu-latest
    environment: development
    env:
      API_NAME: 'api-subjects-dev-001'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: ${{ env.API_NAME }} Settings
        id: settings
        uses: azure/appservice-settings@v1
        with:
          app-name: '${{ env.API_NAME }}'
          app-settings-json: '${{ secrets.APP_SETTINGS }}' 
          connection-strings-json: '${{ secrets.CONNECTION_STRINGS }}'