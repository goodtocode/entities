@page "/businesssearch"
@using Goodtocode.Subjects.BlazorServer.Data;
@using Goodtocode.Subjects.BlazorServer.Models;
@using Goodtocode.Subjects.Domain;

@inject BusinessService Service

<PageTitle>Business Search</PageTitle>

<EditForm Model="@businessSearch" OnValidSubmit="@GetBusineses">
    <DataAnnotationsValidator />
    <div class="input-group mb-3">
        <input type="text" class="form-control form-control-lg" placeholder="Search" aria-label="Search" aria-describedby="button-addon2"
        @bind="@businessSearch.Name" @onkeydown="@(async e => { if (e.Key == "Enter") { await GetBusineses(); } })">
        <button class="btn btn-primary btn-lg" type="submit" id="button-addon2"><i class="bi bi-search"></i></button>
    </div>
    <ValidationSummary />
    <div hidden="@string.IsNullOrEmpty(alertMessage)" class="alert alert-danger" role="alert">@alertMessage</div>
</EditForm>


@if (businesses.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Key</th>
                <th>Name</th>
                <th>Tax Number</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var business in businesses)
            {
                <tr>
                    <td>@business.BusinessKey</td>
                    <td>@business.BusinessName</td>
                    <td>@business.TaxNumber</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string alertMessage = string.Empty;
    private BusinessSearchModel businessSearch = new BusinessSearchModel();
    private IEnumerable<BusinessEntity> businesses = new List<BusinessEntity>();

    private async Task GetBusineses()
    {
        var context = new EditContext(businessSearch);
        var isvalid = context.Validate();
        alertMessage = string.Empty;
        businesses = await Service.GetBusinessesAsync(businessSearch.Name);
        if (businesses.Count() == 0)
            alertMessage = "No businesses found";
    }
}
