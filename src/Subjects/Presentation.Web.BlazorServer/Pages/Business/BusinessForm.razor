@using Goodtocode.Subjects.Models;
@using Goodtocode.Subjects.Paging;
@inject Goodtocode.Subjects.Paging.PageHistoryState PageHistoryState

<EditForm Model="@business" OnValidSubmit="@OnValidSubmit">
    <FluentValidator TValidator="BusinessValidator" />
    <div class="form-group">
        <label>Business Name:</label>
        <div>
            <InputText @bind-Value="@business.BusinessName" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => business.BusinessName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Tax Number:</label>
        <div>
            <InputText @bind-Value="@business.TaxNumber" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => business.TaxNumber)" />
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Business Type:</label>
            <div>
                <InputSelect @bind-Value="@business.Type" class="form-control col-sm-3"> 
                   <option value="Select">--Select--</option>
                    <option value="SP">Sole proprietorship</option>
                    <option value="Partnership">Partnership</option>
                    <option value="Corporation">Corporation</option>
                    <option value="MNC">Multi-national corporation</option>
                    <option value="NPO">Not for profit organizations</option>
                    <option value="Franchise">Franchise</option>
                    <option value="LLC">Limited Liability Company</option>
                    <option value="Trust">Trust</option>
                   <option value="Other">Other</option>
                </InputSelect>
                <ValidationMessage For="@(() => business.Type)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Phone Number :</label>
            <div>
                <InputText @bind-Value="@business.PhoneNumber" class="form-control col-sm-3" />
                <ValidationMessage For="@(() => business.PhoneNumber)" />
            </div>
        </div>
    </div>
    <hr/>

    <div class="form-group">
        <button disabled="@loading" class="btn btn-primary">
            @if (loading) 
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            @ButtonText
        </button>
        @if (PageHistoryState.CanGoBack()){
            <NavLink href="@PageHistoryState.GetGoBackPage()" class="btn btn-link">Cancel</NavLink>
        }
        else{
            <NavLink href="/person/1" class="btn btn-link">Back</NavLink>
        }
    </div>

</EditForm>

@code {
    [Parameter]
    public BusinessModel business { get; set; } = new BusinessModel();
    [Parameter]
    public string ButtonText { get; set; } = "Save";
    [Parameter]
    public bool loading {get; set;} = false;
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }    
}